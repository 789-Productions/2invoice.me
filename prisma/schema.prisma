datasource db { 
  provider = "mysql"
  url = env("DATABASE_URL") 
}
generator client { 
  provider = "prisma-client-js"
  output = "../lib/generated/prisma"
}

generator erd {
  provider = "prisma-erd-generator"
  output = "../docs/ERD.svg"
  disabled = true;
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  passwordHash  String?
  createdAt     DateTime  @default(now())
  accounts      Account[]
  sessions      Session[]
  clients       Client[]
  invoices      Invoice[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

model Client {
  id        Int      @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  name      String
  email     String
  locale    String   @default("en")
  currency  String   @default("USD")
  createdAt DateTime @default(now())
  invoices  Invoice[]
}

model Invoice {
  id         Int           @id @default(autoincrement())
  userId     String
  clientId   Int
  number     String
  token      String        @unique
  issueDate  DateTime
  dueDate    DateTime
  currency   String        @default("USD")
  notes      String?
  createdAt  DateTime      @default(now())
  user       User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  client     Client        @relation(fields: [clientId], references: [id], onDelete: Cascade)
  items      InvoiceItem[]
  totalCents Int

  @@index([userId])
  @@index([clientId])
}

model InvoiceItem {
  id          Int     @id @default(autoincrement())
  invoiceId   Int
  description String
  quantity    Int
  unitCents   Int
  invoice     Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
}
